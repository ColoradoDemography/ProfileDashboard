% Colorado State demography Office Community report template code 
% !TeX program = pdfLaTeX

\documentclass[11pt]{report} 

%defining the page geometry
\usepackage{geometry}
\geometry{letterpaper, margin=1in}

%setting the font (currently helvetica)
\usepackage{helvet}
\renewcommand{\familydefault}{\sfdefault}
\usepackage{xcolor,lipsum}
\usepackage{titlesec}

%defining dolagreen color
\definecolor{dolagreen}{RGB}{0,149,58}

%Suppressing the section numbers

\renewcommand\thesection{}
\makeatletter
\renewcommand\thesection{}
\renewcommand\thesubsection{\@arabic\c@section.\@arabic\c@subsection}
\makeatother

% defining section command
\titleformat{name=\section}[block]
{\sffamily\large}
{}
{0pt}
{\colorsection}
\titlespacing*{\section}{0pt}{\baselineskip}{\baselineskip}
\newcommand{\colorsection}[1]{%
	\colorbox{dolagreen}{\parbox{\dimexpr\textwidth-2\fboxsep}{\color{white}\thesection\ #1}}}

% defining subsection command
\titleformat{name=\subsection}[block]
{\sffamily\large}
{}
{0pt}
{\colorsubsection}
\titlespacing*{\section}{0pt}{\baselineskip}{\baselineskip}
\newcommand{\colorsubsection}[1]{%
	\colorbox{dolagreen}{\parbox{\dimexpr\textwidth-2\fboxsep}{\color{white}\thesection\ #1}}}


\begin{document}
<<setup, include=FALSE, warning=FALSE, message=FALSE, echo=FALSE>>=
opts_chunk$set(fig.width=6, fig.height=4, fig=TRUE,warning=FALSE, message=FALSE, echo=FALSE, results='asis')
## Package and Function Install
# Creating the conditional display vars
if("stats" %in% input$outChk) {
  outStats <- TRUE
} else {
  outStats <- FALSE
}

if("pop" %in% input$outChk) {
  outPop <- TRUE
} else {
  outPop <- FALSE
}

if("popc" %in% input$outChk) {
  outPopC <- TRUE
} else {
  outPopC <- FALSE
}

if("housing" %in% input$outChk) {
  outHouse <- TRUE
} else {
  outHouse <- FALSE
}

if("emply" %in% input$outChk) {
  outEmply <- TRUE
} else {
  outEmply <- FALSE
}

if("comm" %in% input$outChk) {
  outComm <- TRUE
} else {
  outComm <- FALSE
}

if("emplind" %in% input$outChk) {
  outEmplind <- TRUE
} else {
  outEmplind <- FALSE
}



#Replicating the library, function and data setup from the dashboard
# load libraries
library(plyr, quietly=TRUE)
library(tidyverse, quietly=TRUE)
#library(readxl, quietly=TRUE)
library(scales, quietly=TRUE)
library(codemogAPI, quietly=TRUE)
library(codemogProfile, quietly=TRUE)
library(knitr, quietly=TRUE)
library(kableExtra, quietly=TRUE)
library(rmarkdown)
library(robR)

#Start Functions
#1) Utility Functions

#' simpleCap convers strings to proper case, stolen from Stackoverflow.
#'   @param x input string
simpleCap <- function(x) {
  s <- strsplit(x, " ")[[1]]
  paste(toupper(substring(s, 1,1)), tolower(substring(s, 2)),
        sep="", collapse=" ")
}

# 2) Table Production Functions

#' statsTable1 outputes the summary table in the stats section of the dashboard, draws data from the census API
#' @param intab Input table created by StatsTable1 in the dashboard (stats.tab1)
#' 
statsTable1 <- function(inTab){
  return(kable(inTab, caption="Basic Statistics",align="c",
               format ="latex", booktabs=FALSE) %>%
           kable_styling(latex_options = "hold_position"))
}

#' popTable The population table showing the annual growth rate in the Population Section
#' @param inTab nput table created by StatsTable1 in the dashboard (pop.tab1$table)
#' @param ctyname the place name
#'  
popTable <- function(inTab,ctyname) { 

  inTab2 <- inTab[,c(1,3,4,6,7)]
  state= "Colorado"
   names_spaced <- c("Year","Population","Annual Growth Rate","Population","Annual Growth Rate") 

 # create vector with colspan
 tblHead <- c(" " = 1, ctyname = 2, state = 2)
 
 # set vector names 
 names(tblHead) <- c(" ", ctyname,state)

  return(kable(inTab2, col.names = names_spaced ,
      caption="Population Trend",row.names = FALSE, align="c",
      format ="latex", booktabs=FALSE)  %>%
      add_header_above(header=tblHead) %>%
      kable_styling(latex_options = "hold_position") %>%
      add_footnote(c("Source: State Demography Office"))
  )
  
}

#' raceTab1 Table showing the percentage values by ethnic/race categories
#'    pulls data from API This table shows a set of histoical comparisons between
#'    the 2000 Census, the 2010 Census and the latest ACS API
#' @param the short FIPS code
#' @param ctyname Place Name
#' @param ACS data depository from the American Community Survey API
#' 
raceTab1 <- function(inData,ctyname,ACS) {
  
  inData2 <- inData[,2:5]
  #Column Names
  ACSSrc <- paste0("Source: ACS 20",substr(ACS,6,7)," 5-Year Dataset") 
  ACSName <- paste0("20",substr(ACS,6,7),"[note]")
  names_spaced <- c("Race","2000[note]","2010[note]",ACSName) 
  
  #Span Header
  
  # create vector with colspan
  tblHead <- c(" " = 1, ctyname = 3)
  
  # set vector names 
  names(tblHead) <- c(" ", simpleCap(ctyname))
  
  return(kable(inData2, col.names = names_spaced,
           caption="Race Trend", row.names=FALSE, align="c",
           format="latex", booktabs=FALSE)  %>%
           kable_styling(latex_options="hold_position") %>%
           add_header_above(header=tblHead) %>%
           add_footnote(c("Source; 2000 Census",
                          "Source: 2010 Census",
                          ACSSrc), 
                           notation = "symbol"))
}


#' raceTab2 Table showing the percentage values by ethnic/race categories
#'    pulls data from API This table compares Colorado % to selected geographt
#' @param the short FIPS code
#' @param ctyname Place Name
#' @param ACS data depository from the American Community Survey API
#' 
raceTab2 <- function(inData,ctyname,ACS) {
 
  #Column Names
  
  ACSSrc <- paste0("Source: ACS 20",substr(ACS,6,7)," 5-Year Dataset") 
  names_spaced <- c("Race",ctyname,"Colorado") 
  
  
  return(kable(inData, col.names = names_spaced,
            caption="Race Comparison", row.names=FALSE, 
            format="latex", booktabs=FALSE)  %>%
           kable_styling(latex_options = "hold_position") %>%
           add_footnote(c(ACSSrc))
  )
}




#End Functions

if(input$level == "Counties"){
   LocList <- popPlace("County")
   fipslist <- listTofips(LocList,input$level,input$unit)
   rm(LocList)
} 
if(input$level == "Municipalities/Places"){
   LocList <- popPlace("Place")
   fipslist <- listTofips(LocList,input$level,input$unit)
   rm(LocList)
   } 

#converting input$fipslist to numeric
fipsN <- as.numeric(substr(fipslist,3,5))
fips3 <- substr(fipslist,3,5)
PlacName <- simpleCap(as.character(input$unit))

@


\section{\Sexpr{paste0("Community Profile for ",PlacName)}}


<<statsOut,fig.width=4, fig.height=4, fig=TRUE,warning=FALSE, message=FALSE, echo=FALSE, results='asis'>>=
 headTxt = "" 
if(outStats){
    cat(paste("\\subsection{Basic Statistics}",""))
  #Stats Table
   cat(statsTable1(stats.obj$table))
  #area Map
    print(stats.obj$plot)
   }

@

<<popOut, fig.width=6, fig.height=4, fig=TRUE, out.width='1\\linewidth', warning=FALSE, message=FALSE, echo=FALSE, results='asis'>>=
 #Population, Migration and Natural Increase
   if(outPop){
      cat(paste("\\subsection{Population, Migration and Natural Increase}",""))
      # Population Change Table
      cat(popTable(pop.tab1$data,PlacName))
      #Age Trend Data
      print(pop.plot2$plot)
      #Age Forecast
      print(pop.plot3$plot)
      #Components of Change
      print(pop.plot4$plot)
   }
@

<<popOutC,fig.width=6, fig.height=4, fig=TRUE, out.width='1\\linewidth', warning=FALSE, message=FALSE, echo=FALSE, results='asis'>>=
 if(outPopC){
    # Population Chatacteristics 
       cat(paste("\\subsection{Population Characteristics: Income, Education and Race}",""))
       print(popc.plot1$plot)
       print(popc.plot2$plot)
       cat(raceTab1(popc.tab1$data,ctyname=PlacName,"acs1115")) 
       cat(raceTab2(popc.tab2$data,ctyname=PlacName,"acs1115"))
 }
@


\end{document}